<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  Customized TreeCache Service Configuration for Tomcat 5 Clustering   -->
<!--                                                                       -->
<!-- ===================================================================== -->

<server>

    <!-- ==================================================================== -->
    <!-- Defines TreeCache configuration                                      -->
    <!-- ==================================================================== -->

    <!-- Note we are using TreeCacheAop -->
    <mbean code="org.jboss.cache.aop.TreeCacheAop"
        name="jboss.cache:service=TomcatClusteringCache">

        <depends>jboss:service=Naming</depends>
        <depends>jboss:service=TransactionManager</depends>
        <!-- We need the AspectDeployer to deploy our FIELD granularity aspects -->
        <depends>jboss.aop:service=AspectDeployer</depends>
        
        <!--uncomment next three statements if using JGroups multiplexer -->
        <!--  
        <depends>jgroups.mux:name=Multiplexer</depends>
        <attribute name="MultiplexerService">jgroups.mux:name=Multiplexer</attribute>
        <attribute name="MultiplexerStack">fc-fast-minimalthreads</attribute>
        -->

        <!-- make sure to specify BatchModeTransactionManager only! -->
        <attribute name="TransactionManagerLookupClass">org.jboss.cache.BatchModeTransactionManagerLookup</attribute>

        <!--
            Isolation level : SERIALIZABLE
                              REPEATABLE_READ (default)
                              READ_COMMITTED
                              READ_UNCOMMITTED
                              NONE
        -->
        <attribute name="IsolationLevel">REPEATABLE_READ</attribute>

        <!--
             Valid modes are LOCAL, REPL_ASYNC and REPL_SYNC
             
             If you use REPL_SYNC and a UDP-based ClusterConfig
             we recommend you comment out the FC (flow control)
             protocol in the ClusterConfig section below.
        -->
        <attribute name="CacheMode">REPL_ASYNC</attribute>

        <!-- Name of cluster. Needs to be the same for all clusters, in order
             to find each other
        -->
        <attribute name="ClusterName">Tomcat-${jboss.partition.name:Cluster}</attribute>

        <!-- JGroups protocol stack properties. Can also be a URL,
             e.g. file:/home/bela/default.xml
           <attribute name="ClusterProperties"></attribute>
        -->

        <attribute name="ClusterConfig">
            <config>
                <UDP mcast_addr="${jboss.partition.udpGroup:230.1.2.7}" 
                     mcast_port="45577"
                     ucast_recv_buf_size="20000000"
                     ucast_send_buf_size="640000"
                     mcast_recv_buf_size="25000000" 
                     mcast_send_buf_size="640000" 
                     loopback="false" 
                     max_bundle_size="64000" 
                     max_bundle_timeout="30" 
                     use_incoming_packet_handler="true" 
                     use_outgoing_packet_handler="false" 
                     ip_ttl="2" 
                     down_thread="false" up_thread="false"
                     enable_bundling="true"/>
                <PING timeout="2000"
                      down_thread="false" up_thread="false" num_initial_members="3"/>
                <MERGE2 max_interval="100000"
                        down_thread="false" up_thread="false" min_interval="20000"/>
                <FD shun="true" up_thread="false" down_thread="false"
                        timeout="2500" max_tries="5"/>
                <VERIFY_SUSPECT timeout="1500"
                        up_thread="false" down_thread="false"/>
                <pbcast.NAKACK max_xmit_size="60000"
                               use_mcast_xmit="false" gc_lag="50" 
                               retransmit_timeout="100,200,300,600,1200,2400,4800" 
                               down_thread="false" up_thread="false"
                               discard_delivered_msgs="true"/>
                <UNICAST timeout="300,600,1200,2400,3600" 
                         down_thread="false" up_thread="false"/>
                <pbcast.STABLE stability_delay="1000" desired_avg_gossip="50000" 
                               down_thread="false" up_thread="false"
                               max_bytes="2100000"/>
                <pbcast.GMS print_local_addr="true" join_timeout="3000" 
                            down_thread="false" up_thread="false"
                            join_retry_timeout="2000" shun="true"/>
                <!-- If your CacheMode is set to REPL_SYNC we recommend you
                     comment out the FC (flow control) protocol -->
                <FC max_credits="10000000" down_thread="false" up_thread="false"
                    min_threshold="0.20"/>
                <FRAG2 frag_size="60000" down_thread="false" up_thread="false"/>
                <pbcast.STATE_TRANSFER down_thread="false" up_thread="false"/>
            </config>
        </attribute>

        <!--
            Number of milliseconds to wait until all responses for a
            synchronous call have been received.
        -->
        <attribute name="SyncReplTimeout">20000</attribute>

        <!-- Max number of milliseconds to wait for a lock acquisition -->
        <attribute name="LockAcquisitionTimeout">15000</attribute>

        <!--
          Indicate whether to the cache should unmarshall objects replicated
          from other cluster nodes, or store them internally as a byte[]
          until a web app requests them.  Must be "true" if session replication 
          granularity "FIELD" is used in any webapp, otherwise "false" is
          recommended.
        -->
        <attribute name="UseRegionBasedMarshalling">false</attribute>
        <!-- 
        	 Whether or not the entire tree is inactive upon startup, only 
          responding to replication messages after activateRegion() is 
          called to activate one or more parts of the when a webapp is
          deployed.  Must have the same value as "UseRegionBasedMarshalling".
        -->
		  <attribute name="InactiveOnStartup">false</attribute>

        <!-- Buddy Replication config -->
        <attribute name="BuddyReplicationConfig">
            <config>
                <buddyReplicationEnabled>true</buddyReplicationEnabled>
                <buddyLocatorClass>org.jboss.cache.buddyreplication.NextMemberBuddyLocator</buddyLocatorClass>
                <buddyLocatorProperties>
                    numBuddies = 1
                    ignoreColocatedBuddies = true
                </buddyLocatorProperties>

                <buddyPoolName>default</buddyPoolName>
                <buddyCommunicationTimeout>2000</buddyCommunicationTimeout>

                <autoDataGravitation>false</autoDataGravitation>
                <dataGravitationRemoveOnFind>true</dataGravitationRemoveOnFind>
                <dataGravitationSearchBackupTrees>true</dataGravitationSearchBackupTrees>

            </config>
        </attribute>
		  
    </mbean>

</server>
